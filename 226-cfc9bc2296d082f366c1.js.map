{"version":3,"sources":["webpack:///./packages/terra-form-textarea/docs/TextareaField.md","webpack:///./packages/terra-form-textarea/src/TextareaField.jsx","webpack:///./packages/terra-form-textarea/lib/terra-dev-site/doc/example/TextareaField.js","webpack:///./packages/terra-form-textarea/src/terra-dev-site/doc/example/TextareaField.jsx","webpack:///./packages/terra-form-textarea/lib/terra-dev-site/doc/example/RequiredTextareaField.js","webpack:///./packages/terra-form-textarea/src/terra-dev-site/doc/example/RequiredTextareaField.jsx","webpack:///./packages/terra-form-textarea/lib/terra-dev-site/doc/form-textarea/TextareaField.2.doc.js","webpack:///./packages/terra-form-textarea/lib/TextareaField.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","require","_TextareaField","obj","__esModule","_default","createElement","inputId","label","help","inputAttrs","name","placeholder","required","_terraDocTemplate","_package","_TextareaField2","_TextareaField3","_TextareaField4","_RequiredTextareaField","_RequiredTextareaField2","packageName","readme","srcPath","concat","propsTables","componentName","componentSrc","examples","example","source","_propTypes","_IconError","_terraFormField","_Textarea","_extends","assign","target","i","arguments","length","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","string","isRequired","node","defaultValue","oneOfType","number","disabled","bool","error","errorIcon","element","hideRequired","object","isInline","isInvalid","isLabelHidden","labelAttrs","maxWidth","onChange","func","showOptional","defaultProps","undefined","TextareaField","props","ariaDescriptionIds","customProps","htmlFor","id"],"mappings":"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","file":"226-cfc9bc2296d082f366c1.js","sourcesContent":["export default \"# Terra Form Textarea Field\\n\\n[terra-form-textarea](https://github.com/cerner/terra-core/tree/master/packages/terra-form-textarea) component that is wrapped inside a\\n[terra-form-field](https://github.com/cerner/terra-core/tree/master/packages/terra-form-field) component.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-form-textarea`\\n\\n## Component Features\\n\\n * [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n * [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\\n * [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\\n * [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\\n\\n<!-- Uncomment supported features.\\n * [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\\n * [Localization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\\n-->\\n\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport IconError from 'terra-icon/lib/icon/IconError';\\nimport Field from 'terra-form-field';\\n\\nimport Textarea from './Textarea';\\n\\nconst propTypes = {\\n  /**\\n   * Id of the input. Populates both the input and the htmlFor prop of the wrapper Field.\\n   */\\n  inputId: PropTypes.string.isRequired,\\n  /**\\n   * The label of the form control children.\\n   */\\n  label: PropTypes.node.isRequired,\\n  /**\\n   * The defaultValue of the input field. Use this to create an uncontrolled input.\\n   */\\n  defaultValue: PropTypes.oneOfType([\\n    PropTypes.string,\\n    PropTypes.number,\\n  ]),\\n  /**\\n   * Whether the input is disabled.\\n   */\\n  disabled: PropTypes.bool,\\n  /**\\n   * Error message for when the input is invalid.\\n   */\\n  error: PropTypes.node,\\n  /**\\n   * Error Icon to display when the input is invalid.\\n   */\\n  errorIcon: PropTypes.element,\\n  /**\\n   * Help element to display with the input.\\n   */\\n  help: PropTypes.node,\\n  /**\\n   * Whether or not to hide the required indicator on the label.\\n   */\\n  hideRequired: PropTypes.bool,\\n  /**\\n   * Attributes to attach to the input object\\n   */\\n  // eslint-disable-next-line react/forbid-prop-types\\n  inputAttrs: PropTypes.object,\\n  /**\\n   * Whether or not the field is an inline field.\\n   */\\n  isInline: PropTypes.bool,\\n  /**\\n   * Whether or not the field is invalid.\\n   */\\n  isInvalid: PropTypes.bool,\\n  /**\\n   * Whether or not the label is visible. Use this props to hide a label while still creating it on the DOM for accessibility.\\n   */\\n  isLabelHidden: PropTypes.bool,\\n  /**\\n   * Attributes to attach to the label.\\n   */\\n  // eslint-disable-next-line react/forbid-prop-types\\n  labelAttrs: PropTypes.object,\\n  /**\\n   * Set the max-width of a field using `length` or `%`.  Best practice recommendation to never exceed\\n   * a rendered value of 1020px. _(Note: Providing custom inline styles will take precedence.)_\\n   */\\n  maxWidth: PropTypes.string,\\n  /**\\n   * Function to trigger when user changes the input value. Provide a function to create a controlled input.\\n   */\\n  onChange: PropTypes.func,\\n  /**\\n   * Whether or not the field is required.\\n   */\\n  required: PropTypes.bool,\\n  /**\\n   * Whether or not to append the 'optional' label to a non-required field label.\\n   */\\n  showOptional: PropTypes.bool,\\n  /**\\n   * The value of the input field. Use this to create a controlled input.\\n   */\\n  value: PropTypes.oneOfType([\\n    PropTypes.string,\\n    PropTypes.number,\\n  ]),\\n};\\n\\nconst defaultProps = {\\n  defaultValue: undefined,\\n  disabled: false,\\n  error: null,\\n  errorIcon: <IconError />,\\n  help: null,\\n  hideRequired: false,\\n  inputAttrs: {},\\n  isInline: false,\\n  isInvalid: false,\\n  isLabelHidden: false,\\n  labelAttrs: {},\\n  maxWidth: undefined,\\n  onChange: undefined,\\n  required: false,\\n  showOptional: false,\\n  value: undefined,\\n};\\n\\nconst TextareaField = (props) => {\\n  const {\\n    defaultValue,\\n    disabled,\\n    error,\\n    errorIcon,\\n    help,\\n    hideRequired,\\n    inputAttrs,\\n    inputId,\\n    isInline,\\n    isInvalid,\\n    isLabelHidden,\\n    label,\\n    labelAttrs,\\n    maxWidth,\\n    required,\\n    showOptional,\\n    onChange,\\n    value,\\n    ...customProps\\n  } = props;\\n\\n  let ariaDescriptionIds;\\n\\n  if (help && error && isInvalid) {\\n    ariaDescriptionIds = `${inputId}-error ${inputId}-help`;\\n  } else {\\n    if (help) {\\n      ariaDescriptionIds = `${inputId}-help`;\\n    }\\n\\n    if (error && isInvalid) {\\n      ariaDescriptionIds = `${inputId}-error`;\\n    }\\n  }\\n\\n  return (\\n    <Field\\n      {...customProps}\\n      label={label}\\n      labelAttrs={labelAttrs}\\n      error={error}\\n      errorIcon={errorIcon}\\n      help={help}\\n      hideRequired={hideRequired}\\n      required={required}\\n      showOptional={showOptional}\\n      isInvalid={isInvalid}\\n      isInline={isInline}\\n      isLabelHidden={isLabelHidden}\\n      htmlFor={inputId}\\n      maxWidth={maxWidth}\\n    >\\n      <Textarea\\n        {...inputAttrs}\\n        disabled={inputAttrs.disabled || disabled}\\n        id={inputId}\\n        onChange={onChange}\\n        value={value}\\n        defaultValue={defaultValue}\\n        aria-describedby={ariaDescriptionIds}\\n      />\\n    </Field>\\n  );\\n};\\n\\nTextareaField.propTypes = propTypes;\\nTextareaField.defaultProps = defaultProps;\\n\\nexport default TextareaField;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _TextareaField = _interopRequireDefault(require(\"../../../TextareaField\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DefaultTextAreaField = function DefaultTextAreaField() {\n  return _react.default.createElement(_TextareaField.default, {\n    inputId: \"textarea\",\n    label: \"Textarea\",\n    help: \"Note: This is help text\",\n    inputAttrs: {\n      name: 'textarea',\n      placeholder: 'Textarea placeholder'\n    }\n  });\n};\n\nvar _default = DefaultTextAreaField;\nexports.default = _default;","export default \"import React from 'react';\\nimport TextareaField from '../../../TextareaField';\\n\\nconst DefaultTextAreaField = () => (\\n  <TextareaField\\n    inputId=\\\"textarea\\\"\\n    label=\\\"Textarea\\\"\\n    help=\\\"Note: This is help text\\\"\\n    inputAttrs={{\\n      name: 'textarea',\\n      placeholder: 'Textarea placeholder',\\n    }}\\n  />\\n);\\n\\nexport default DefaultTextAreaField;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _TextareaField = _interopRequireDefault(require(\"../../../TextareaField\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DefaultTextAreaField = function DefaultTextAreaField() {\n  return _react.default.createElement(_TextareaField.default, {\n    inputId: \"requiredTextarea\",\n    label: \"Required Textarea\",\n    help: \"Note: This is help text\",\n    required: true,\n    inputAttrs: {\n      name: 'requiredTextarea',\n      placeholder: 'Textarea placeholder'\n    }\n  });\n};\n\nvar _default = DefaultTextAreaField;\nexports.default = _default;","export default \"import React from 'react';\\nimport TextareaField from '../../../TextareaField';\\n\\nconst DefaultTextAreaField = () => (\\n  <TextareaField\\n    inputId=\\\"requiredTextarea\\\"\\n    label=\\\"Required Textarea\\\"\\n    help=\\\"Note: This is help text\\\"\\n    required\\n    inputAttrs={{\\n      name: 'requiredTextarea',\\n      placeholder: 'Textarea placeholder',\\n    }}\\n  />\\n);\\n\\nexport default DefaultTextAreaField;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _TextareaField = _interopRequireDefault(require(\"../../../../docs/TextareaField.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _TextareaField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/TextareaField\"));\n\nvar _TextareaField3 = _interopRequireDefault(require(\"../example/TextareaField\"));\n\nvar _TextareaField4 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/TextareaField\"));\n\nvar _RequiredTextareaField = _interopRequireDefault(require(\"../example/RequiredTextareaField\"));\n\nvar _RequiredTextareaField2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/RequiredTextareaField\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\n// Component Source\n// Example Files\n\n/* eslint-enable import/no-webpack-loader-syntax, import/first, import/extensions, import/no-unresolved, import/no-duplicates */\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    readme: _TextareaField.default,\n    srcPath: \"https://github.com/cerner/terra-core/tree/master/packages/\".concat(_package.name),\n    propsTables: [{\n      componentName: 'TextareaField',\n      componentSrc: _TextareaField2.default\n    }],\n    examples: [{\n      example: _react.default.createElement(_TextareaField3.default, null),\n      source: _TextareaField4.default\n    }, {\n      example: _react.default.createElement(_RequiredTextareaField.default, null),\n      source: _RequiredTextareaField2.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _IconError = _interopRequireDefault(require(\"terra-icon/lib/icon/IconError\"));\n\nvar _terraFormField = _interopRequireDefault(require(\"terra-form-field\"));\n\nvar _Textarea = _interopRequireDefault(require(\"./Textarea\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar propTypes = {\n  /**\n   * Id of the input. Populates both the input and the htmlFor prop of the wrapper Field.\n   */\n  inputId: _propTypes.default.string.isRequired,\n\n  /**\n   * The label of the form control children.\n   */\n  label: _propTypes.default.node.isRequired,\n\n  /**\n   * The defaultValue of the input field. Use this to create an uncontrolled input.\n   */\n  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n\n  /**\n   * Whether the input is disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * Error message for when the input is invalid.\n   */\n  error: _propTypes.default.node,\n\n  /**\n   * Error Icon to display when the input is invalid.\n   */\n  errorIcon: _propTypes.default.element,\n\n  /**\n   * Help element to display with the input.\n   */\n  help: _propTypes.default.node,\n\n  /**\n   * Whether or not to hide the required indicator on the label.\n   */\n  hideRequired: _propTypes.default.bool,\n\n  /**\n   * Attributes to attach to the input object\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  inputAttrs: _propTypes.default.object,\n\n  /**\n   * Whether or not the field is an inline field.\n   */\n  isInline: _propTypes.default.bool,\n\n  /**\n   * Whether or not the field is invalid.\n   */\n  isInvalid: _propTypes.default.bool,\n\n  /**\n   * Whether or not the label is visible. Use this props to hide a label while still creating it on the DOM for accessibility.\n   */\n  isLabelHidden: _propTypes.default.bool,\n\n  /**\n   * Attributes to attach to the label.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  labelAttrs: _propTypes.default.object,\n\n  /**\n   * Set the max-width of a field using `length` or `%`.  Best practice recommendation to never exceed\n   * a rendered value of 1020px. _(Note: Providing custom inline styles will take precedence.)_\n   */\n  maxWidth: _propTypes.default.string,\n\n  /**\n   * Function to trigger when user changes the input value. Provide a function to create a controlled input.\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Whether or not the field is required.\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * Whether or not to append the 'optional' label to a non-required field label.\n   */\n  showOptional: _propTypes.default.bool,\n\n  /**\n   * The value of the input field. Use this to create a controlled input.\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n};\nvar defaultProps = {\n  defaultValue: undefined,\n  disabled: false,\n  error: null,\n  errorIcon: _react.default.createElement(_IconError.default, null),\n  help: null,\n  hideRequired: false,\n  inputAttrs: {},\n  isInline: false,\n  isInvalid: false,\n  isLabelHidden: false,\n  labelAttrs: {},\n  maxWidth: undefined,\n  onChange: undefined,\n  required: false,\n  showOptional: false,\n  value: undefined\n};\n\nvar TextareaField = function TextareaField(props) {\n  var defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      error = props.error,\n      errorIcon = props.errorIcon,\n      help = props.help,\n      hideRequired = props.hideRequired,\n      inputAttrs = props.inputAttrs,\n      inputId = props.inputId,\n      isInline = props.isInline,\n      isInvalid = props.isInvalid,\n      isLabelHidden = props.isLabelHidden,\n      label = props.label,\n      labelAttrs = props.labelAttrs,\n      maxWidth = props.maxWidth,\n      required = props.required,\n      showOptional = props.showOptional,\n      onChange = props.onChange,\n      value = props.value,\n      customProps = _objectWithoutProperties(props, [\"defaultValue\", \"disabled\", \"error\", \"errorIcon\", \"help\", \"hideRequired\", \"inputAttrs\", \"inputId\", \"isInline\", \"isInvalid\", \"isLabelHidden\", \"label\", \"labelAttrs\", \"maxWidth\", \"required\", \"showOptional\", \"onChange\", \"value\"]);\n\n  var ariaDescriptionIds;\n\n  if (help && error && isInvalid) {\n    ariaDescriptionIds = \"\".concat(inputId, \"-error \").concat(inputId, \"-help\");\n  } else {\n    if (help) {\n      ariaDescriptionIds = \"\".concat(inputId, \"-help\");\n    }\n\n    if (error && isInvalid) {\n      ariaDescriptionIds = \"\".concat(inputId, \"-error\");\n    }\n  }\n\n  return _react.default.createElement(_terraFormField.default, _extends({}, customProps, {\n    label: label,\n    labelAttrs: labelAttrs,\n    error: error,\n    errorIcon: errorIcon,\n    help: help,\n    hideRequired: hideRequired,\n    required: required,\n    showOptional: showOptional,\n    isInvalid: isInvalid,\n    isInline: isInline,\n    isLabelHidden: isLabelHidden,\n    htmlFor: inputId,\n    maxWidth: maxWidth\n  }), _react.default.createElement(_Textarea.default, _extends({}, inputAttrs, {\n    disabled: inputAttrs.disabled || disabled,\n    id: inputId,\n    onChange: onChange,\n    value: value,\n    defaultValue: defaultValue,\n    \"aria-describedby\": ariaDescriptionIds\n  })));\n};\n\nTextareaField.propTypes = propTypes;\nTextareaField.defaultProps = defaultProps;\nvar _default = TextareaField;\nexports.default = _default;"],"sourceRoot":""}