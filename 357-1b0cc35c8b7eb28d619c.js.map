{"version":3,"sources":["webpack:///./packages/terra-markdown/docs/README.md","webpack:///./packages/terra-markdown/lib/terra-dev-site/doc/markdown/Markdown.module.scss?1852","webpack:///./packages/terra-markdown/lib/terra-dev-site/doc/markdown/Markdown.doc.js"],"names":["module","exports","Object","defineProperty","value","default","_react","_interopRequireDefault","require","_Markdown","_bind","_README","_MarkdownModule","obj","__esModule","cx","bind","_default","createElement","className","src"],"mappings":"6FAAA,OAAe,8rL,qBCCfA,EAAOC,QAAU,CAAC,mBAAmB,8C,kCCCrCC,OAAOC,eAAeF,EAAS,aAAc,CAC3CG,OAAO,IAETH,EAAQI,aAAU,EAElB,IAAIC,EAASC,EAAuBC,EAAQ,IAExCC,EAAYF,EAAuBC,EAAQ,MAE3CE,EAAQH,EAAuBC,EAAQ,IAEvCG,EAAUJ,EAAuBC,EAAQ,OAEzCI,EAAkBL,EAAuBC,EAAQ,OAErD,SAASD,EAAuBM,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAER,QAASQ,GAGvF,IAAIE,EAAKL,EAAML,QAAQW,KAAKJ,EAAgBP,SAWxCY,EARkB,WACpB,OAAOX,EAAOD,QAAQa,cAAc,MAAO,CACzCC,UAAWJ,EAAG,qBACbT,EAAOD,QAAQa,cAAcT,EAAUJ,QAAS,CACjDe,IAAKT,EAAQN,YAKjBJ,EAAQI,QAAUY","file":"357-1b0cc35c8b7eb28d619c.js","sourcesContent":["export default \"# Terra Markdown\\n\\nReact component to display the content of markdown files.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-markdown`\\n  - `yarn add terra-markdown`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\n<details>\\n<summary>View information on this component's peer dependencies.</summary>\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n\\n\\n</details>\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\\n## Usage\\n\\n```jsx\\nimport React from 'react';\\nimport Markdown from 'terra-markdown';\\nimport ReadMe from '{component}/docs/README.md';\\n\\n<Markdown id=\\\"readme\\\" src={ReadMe} />\\n```\\n\\n## Code formatting\\nTerra markdown uses prismjs to support code block highlighting.\\n### Default languages\\nBy default terra-markdown supports:\\n* markup\\n* xml\\n* html\\n* mathml\\n* svg\\n* css\\n* clike\\n* javascript\\n* js\\n* diff\\n* jsx\\n* scss\\n\\n### Additional languages\\nTo add additional languages for code format blocks, simply inlcude the prismjs componet.\\n\\nIf using terra-dev-site add an additional side effect import.\\n```javascript\\nconst siteConfig = {\\n  sideEffectImports: [\\n      '../node_modules/prismjs/components/prism-bash',\\n    ],\\n}\\n```\\n\\n## Code Formatblock Examples\\n\\n### jsx\\n```jsx\\nvar ExampleApplication = React.createClass({\\n    render: function() {\\n      var elapsed = Math.round(this.props.elapsed  / 100);\\n      var seconds = elapsed / 10 + (elapsed % 10 ? '' : '.0' );\\n      var message =\\n        'React has been successfully running for ' + seconds + ' seconds.';\\n\\n      return <p>{message}</p>;\\n    }\\n  });\\n  var start = new Date().getTime();\\n  setInterval(function() {\\n    React.render(\\n      <ExampleApplication elapsed={new Date().getTime() - start} />,\\n      document.getElementById('container')\\n    );\\n  }, 50);\\n```\\n### javascript\\n```javascript\\nfunction $initHighlight(block, cls) {\\n  try {\\n    if (cls.search(/\\\\bno\\\\-highlight\\\\b/) != -1)\\n      return process(block, true, 0x0F) +\\n             ` class=\\\"${cls}\\\"`;\\n  } catch (e) {\\n    /* handle exception */\\n  }\\n  for (var i = 0 / 2; i < classes.length; i++) {\\n    if (checkCondition(classes[i]) === undefined)\\n      console.log('undefined');\\n  }\\n}\\n\\nexport  $initHighlight;\\n```\\n### scss\\n```scss\\n@import \\\"compass/reset\\\";\\n\\n// variables\\n$colorGreen: #008000;\\n$colorGreenDark: darken($colorGreen, 10);\\n\\n@mixin container {\\n    max-width: 980px;\\n}\\n\\n// mixins with parameters\\n@mixin button($color:green) {\\n    @if ($color == green) {\\n        background-color: #008000;\\n    }\\n    @else if ($color == red) {\\n        background-color: #B22222;\\n    }\\n}\\n\\nbutton {\\n    @include button(red);\\n}\\n\\ndiv,\\n.navbar,\\n#header,\\ninput[type=\\\"input\\\"] {\\n    font-family: \\\"Helvetica Neue\\\", Arial, sans-serif;\\n    width: auto;\\n    margin: 0 auto;\\n    display: block;\\n}\\n\\n.row-12 > [class*=\\\"spans\\\"] {\\n    border-left: 1px solid #B5C583;\\n}\\n\\n// nested definitions\\nul {\\n    width: 100%;\\n    padding: {\\n        left: 5px; right: 5px;\\n    }\\n  li {\\n      float: left; margin-right: 10px;\\n      .home {\\n          background: url('http://placehold.it/20') scroll no-repeat 0 0;\\n    }\\n  }\\n}\\n\\n.banner {\\n    @extend .container;\\n}\\n\\na {\\n  color: $colorGreen;\\n  &:hover { color: $colorGreenDark; }\\n  &:visited { color: #c458cb; }\\n}\\n\\n@for $i from 1 through 5 {\\n    .span#{$i} {\\n        width: 20px*$i;\\n    }\\n}\\n\\n@mixin mobile {\\n  @media screen and (max-width : 600px) {\\n    @content;\\n  }\\n}\\n```\\n### css\\n```css\\n@font-face {\\n  font-family: Chunkfive; src: url('Chunkfive.otf');\\n}\\n\\nbody, .usertext {\\n  color: #F0F0F0; background: #600;\\n  font-family: Chunkfive, sans;\\n}\\n\\n@import url(print.css);\\n@media print {\\n  a[href^=http]::after {\\n    content: attr(href)\\n  }\\n}\\n```\\n### html\\n```html\\n<!DOCTYPE html>\\n<title>Title</title>\\n\\n<style>body {width: 500px;}</style>\\n\\n<script type=\\\"application/javascript\\\">\\n  function $init() {return true;}\\n</script>\\n\\n<body>\\n  <p checked class=\\\"title\\\" id='title'>Title</p>\\n  <!-- here goes the rest of the page -->\\n</body>\\n```\\n### diff\\n```diff\\nIndex: languages/ini.js\\n===================================================================\\n--- languages/ini.js    (revision 199)\\n+++ languages/ini.js    (revision 200)\\n@@ -1,8 +1,7 @@\\n hljs.LANGUAGES.ini =\\n {\\n   case_insensitive: true,\\n-  defaultMode:\\n-  {\\n+  defaultMode: {\\n     contains: ['comment', 'title', 'setting'],\\n     illegal: '[^\\\\\\\\s]'\\n   },\\n\\n*** /path/to/original timestamp\\n--- /path/to/new      timestamp\\n***************\\n*** 1,3 ****\\n--- 1,9 ----\\n+ This is an important\\n+ notice! It should\\n+ therefore be located at\\n+ the beginning of this\\n+ document!\\n\\n! compress the size of the\\n! changes.\\n\\n  It is important to spell\\n```\\n### No Format\\n```\\nnoformat\\n```\\n\\n## Props\\n| Prop Name | Type | Is Required | Default Value | Description |\\n| ------------- |-------------| -----| -----| -----|\\n| src | string | optional | '' | Markdown content to parse. |\\n| baseUrl | string | optional | undefined | A prefix url for any relative link. e.g. '/prefix/'|\\n| hasHeadingAnchors | bool | optional | undefined | Adds anchor links to heading elements. Anchor elements will not work with the hash router on an SPA. The anchors use negative margins to position to the left of heading. You must have more that 24px of space around this component. |\\n\\n## Component Features\\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown-wrapper\":\"Markdown-module__markdown-wrapper___1Lxu0\"};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Markdown = _interopRequireDefault(require(\"terra-markdown/lib/Markdown\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _MarkdownModule = _interopRequireDefault(require(\"./Markdown.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line import/no-extraneous-dependencies, import/no-unresolved, import/extensions\nvar cx = _bind.default.bind(_MarkdownModule.default); // We're not using the doc template here to avoid circular dependencies.\n\n\nvar MarkdownExample = function MarkdownExample() {\n  return _react.default.createElement(\"div\", {\n    className: cx('markdown-wrapper')\n  }, _react.default.createElement(_Markdown.default, {\n    src: _README.default\n  }));\n};\n\nvar _default = MarkdownExample;\nexports.default = _default;"],"sourceRoot":""}